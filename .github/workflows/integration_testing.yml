on:
  pull_request:
    branches: [ main ]
  push:

name: Integration Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run_checker:
    runs-on: ubuntu-latest
    name: Check legibility
    outputs:
      should_run_all: ${{steps.PR.outputs.pr_found == 'true' && contains(steps.PR.outputs.pr_labels, 'ci-test-ui-all')}}
      should_run_desktop: ${{steps.PR.outputs.pr_found == 'true' && contains(steps.PR.outputs.pr_labels, 'ci-test-ui-desktop')}}
      should_run_emulator: ${{steps.PR.outputs.pr_found == 'true' && contains(steps.PR.outputs.pr_labels, 'ci-test-ui-emulators')}}
      should_run_ios: ${{steps.PR.outputs.pr_found == 'true' && contains(steps.PR.outputs.pr_labels, 'ci-test-ui-ios')}}
      should_run_android: ${{steps.PR.outputs.pr_found == 'true' && contains(steps.PR.outputs.pr_labels, 'ci-test-ui-android')}}
    steps:
      - uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: PR
        with:
          # Only return if PR is still open. (By default it returns PRs in any state.)
          filterOutClosed: true
          # Only return if PR is not in draft state. (By default it returns PRs in any state.)
          # filterOutDraft: true

      - run: echo "PR $prNumber $prTitle at $prUrl is labeled $prLabels. It should run a demo build; $contains"
        if: steps.PR.outputs.pr_found == 'true'
        env:
          # Direct access to common PR properties
          prNumber: ${{ steps.PR.outputs.number }}
          prUrl: ${{ steps.PR.outputs.pr_url }}
          prTitle: ${{ steps.PR.outputs.pr_title }}
          prBody: ${{ steps.PR.outputs.pr_body }}
          prCreatedAt: ${{ steps.PR.outputs.pr_created_at }}
          prMergedAt: ${{ steps.PR.outputs.pr_merged_at }}
          prClosedAt: ${{ steps.PR.outputs.pr_closed_at }}
          prLabels: ${{ steps.PR.outputs.pr_labels }}
          contains: ${{ contains(steps.PR.outputs.pr_labels, 'ci-test-ui') }}
     

  rust:
    runs-on: ubuntu-latest
    name: Rust
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: Install supported toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: jlumbroso/free-disk-space@main
        name: Free Disk Space (Ubuntu)
        with:
          tool-cache: false
          large-packages: false # keep clang around

      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - uses: michaelkaye/setup-matrix-synapse@main
        with:
          installer: poetry
          uploadLogs: false
          httpPort: 8118
          disableRateLimiting: true
          customModules: synapse_super_invites
          customConfig: |
            modules:
              - module: "synapse_super_invites.SynapseSuperInvites"
                config:
                  sql_url: "sqlite://"
                  generate_registration_token: true

      - uses: rui314/setup-mold@v1
        name: "Setup mold linker"

      - uses: Swatinem/rust-cache@v1

      - uses: taiki-e/install-action@nextest

      - name: Initialize e2ee mock data
        run: cargo run -p acter-cli -- mock
        env:
          DEFAULT_HOMESERVER_NAME: "localhost"
          DEFAULT_HOMESERVER_URL: "http://localhost:8118"

      - name: run cargo integration tests
        env:
          DEFAULT_HOMESERVER_URL: "http://localhost:8118"
          DEFAULT_HOMESERVER_NAME: "localhost"
          CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER: "clang"
          CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUSTFLAG: -C link-arg=-fuse-ld=/usr/local/bin/mold
        run: cargo nextest run --config-file .github/nextest-config.toml -p acter-test

      # file an error if this failed on `main` post-merge
      - name: Report issue
        if: ${{ github.ref == 'refs/heads/main' && failure() }}
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TITLE: "Rust integration tests failed on main"
          FAILED_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs/${{ github.job }}
          ARTIFACT_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          assignees: gnunicorn
          filename: .github/templates/failure-report-template.md
          update_existing: true

  flutter-desktop:
    runs-on: ubuntu-latest
    name: Flutter Desktop
    continue-on-error: true
    needs:
     - run_checker
     
    if: ${{ github.ref == 'refs/heads/main' || needs.run_checker.outputs.should_run_all != 'false' || needs.run_checker.outputs.should_run_desktop != 'false' }}

    steps:
      - uses: actions/checkout@v2

      - name: Install extra deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev liblzma-dev
          sudo apt install -y dbus-x11 network-manager upower

      - name: Install supported toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1

      - uses: subosito/flutter-action@v2
        name: Set up flutter
        with:
          flutter-version: '3.19'
          channel: 'stable'

      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - uses: michaelkaye/setup-matrix-synapse@main
        with:
          installer: poetry
          uploadLogs: true
          httpPort: 8118
          disableRateLimiting: true
          customModules: synapse_super_invites
          customConfig: |
            modules:
              - module: "synapse_super_invites.SynapseSuperInvites"
                config:
                  sql_url: "sqlite://"
                  generate_registration_token: true

      - name: Initialize e2ee mock data
        run: cargo run -p acter-cli -- mock
        env:
          DEFAULT_HOMESERVER_NAME: "localhost"
          DEFAULT_HOMESERVER_URL: "http://localhost:8118"

      - name: Enable Linux Desktop
        run: flutter config --enable-linux-desktop

      - name: Build Native
        run: cargo make desktop

      - name: Flutter setup
        working-directory: app
        run: flutter pub get

      - name: Open Keyring
        uses: t1m0thyj/unlock-keyring@v1

      - name: Run flutter integration tests
        working-directory: app
        run: |
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          xvfb_pid=$!
          flutter run integration_test/main_test.dart  \
              -d linux \
              --host-vmservice-port 9753 \
              --disable-service-auth-codes \
              --dart-define CI=true \
              --dart-define CONVENIENT_TEST_APP_CODE_DIR=lib \
              --dart-define DEFAULT_HOMESERVER_URL=http://localhost:8118/ \
              --dart-define DEFAULT_HOMESERVER_NAME=localhost \
              &
          subscript_pid=$!

          # actual manager runner
          dart run convenient_test_manager_dart --enable-report-saver
          exit_status=$?
          kill "$xvfb_pid" "$subscript_pid"
          exit exit_status

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: linux-desktop-convtest-report
          path: /tmp/ConvenientTest/

      # file an error if this failed on `main` post-merge
      - name: Report issue
        if: ${{ github.ref == 'refs/heads/main' && failure() }}
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TITLE: "Desktop integration tests failed on main"
          FAILED_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs/${{ github.job }}
          ARTIFACT_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          assignees: gnunicorn
          filename: .github/templates/failure-report-template.md
          update_existing: true

  flutter-ios:
    runs-on: macos-latest
    environment: release

    name: iOS
    needs:
     - run_checker
    if: ${{ github.ref == 'refs/heads/main' || needs.run_checker.outputs.should_run_ios != 'false' || needs.run_checker.outputs.should_run_emulator != 'false' || needs.run_checker.outputs.should_run_all != 'false' }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2

      - name: Install supported toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1

      - name: Rust Android Setup
        run: cargo make setup-ios

      - name: Unlock git-crypt
        run: |
          brew install git-crypt
          echo "${{ secrets.GIT_CRYPT_KEY }}" | base64 --decode > .github/assets/git-crypt-key
          git-crypt unlock .github/assets/git-crypt-key
          echo "Files found:"
          git-crypt status -e

      # Install the Apple certificate and provisioning profile
      - name: Install the Apple certificates
        env:
          P12_PASSWORD: ${{ secrets.BUILD_CERTS_P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          echo "starting in $RUNNER_TEMP"
          # create variables
          CERTIFICATE_PATH=".github/assets/build_certificates.p12"
          KEYCHAIN_PATH="$RUNNER_TEMP/app-signing.keychain-db"
          echo "vars set"
          # import certificate and provisioning profile from secrets
          # create temporary keychain
          echo "creating keychain"
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          echo "setting keychain"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          echo "unlocking keychain"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          # import certificate to keychain
          echo "importing certificate"
          security import "$CERTIFICATE_PATH" -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k "$KEYCHAIN_PATH"
          echo "listing keychains"
          security list-keychain -d user -s "$KEYCHAIN_PATH"
      - name: Install the Apple provisioning profile
        run: |
          echo "Installing provision profiles"
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles/
          cp .github/assets/provision_profiles/* ~/Library/MobileDevice/Provisioning\ Profiles/
          ls -ltas ~/Library/MobileDevice/Provisioning\ Profiles/

      - uses: subosito/flutter-action@v2
        name: Set up flutter
        with:
          flutter-version: '3.19'
          channel: 'stable'

      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - uses: michaelkaye/setup-matrix-synapse@main
        with:
          uploadLogs: true
          httpPort: 8118
          disableRateLimiting: true
          customModules: synapse_super_invites
          customConfig: |
            modules:
              - module: "synapse_super_invites.SynapseSuperInvites"
                config:
                  sql_url: "sqlite://"
                  generate_registration_token: true

      - name: Initialize e2ee mock data
        run: cargo run -p acter-cli -- mock
        env:
          DEFAULT_HOMESERVER_NAME: "localhost"
          DEFAULT_HOMESERVER_URL: "http://localhost:8118"

      - name: Build Native
        run: cargo make ios-sim

      - uses: futureware-tech/simulator-action@v1
        with:
          model: 'iPhone 12'

      - name: Flutter setup
        working-directory: app
        run: |
          flutter pub get
          flutter build ipa

      - name: Run flutter integration tests
        run: .github/scripts/flutter-integration-tests.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: ios-convtest-report
          path: /tmp/ConvenientTest/

      # file an error if this failed on `main` post-merge
      - name: Report issue
        if: ${{ github.ref == 'refs/heads/main' && failure() }}
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TITLE: "iOS integration tests failed on main"
          FAILED_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs/${{ github.job }}
          ARTIFACT_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          assignees: gnunicorn
          filename: .github/templates/failure-report-template.md
          update_existing: true

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/*
          rm .github/assets/git-crypt-key

  flutter-android:
    runs-on: macos-latest
    name: Android
    needs:
     - run_checker
    if: ${{ github.ref == 'refs/heads/main' || needs.run_checker.outputs.should_run_android != 'false' || needs.run_checker.outputs.should_run_emulator != 'false' || needs.run_checker.outputs.should_run_all != 'false' }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2

      - name: Install supported toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - uses: Swatinem/rust-cache@v1

      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1

      - name: Rust Android Setup
        run: cargo make setup-android

      - uses: subosito/flutter-action@v2
        name: Set up flutter
        with:
          flutter-version: '3.19'
          channel: 'stable'

      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - uses: michaelkaye/setup-matrix-synapse@main
        with:
          uploadLogs: true
          httpPort: 8118
          disableRateLimiting: true
          customModules: synapse_super_invites
          customConfig: |
            modules:
              - module: "synapse_super_invites.SynapseSuperInvites"
                config:
                  sql_url: "sqlite://"
                  generate_registration_token: true

      - name: Initialize e2ee mock data
        run: cargo run -p acter-cli -- mock
        env:
          DEFAULT_HOMESERVER_NAME: "localhost"
          DEFAULT_HOMESERVER_URL: "http://localhost:8118"

      - name: Build Native
        run: cargo make android-dev

      - name: Flutter setup
        working-directory: app
        run: flutter pub get

      - name: Run integration tests on android
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          arch: x86
          profile: Nexus 5X
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          emulator-build: 7425822
          script: .github/scripts/flutter-integration-tests.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: android-convtest-report
          path: /tmp/ConvenientTest/

      # file an error if this failed on `main` post-merge
      - name: Report issue
        if: ${{ github.ref == 'refs/heads/main' && failure() }}
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TITLE: "Android integration tests failed on main"
          FAILED_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs/${{ github.job }}
          ARTIFACT_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          assignees: gnunicorn
          filename: .github/templates/failure-report-template.md
          update_existing: true
