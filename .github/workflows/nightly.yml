name: Nightly builds

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
   - cron: 0 3 * * *

jobs:
  run_checker:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.check-new-commits.outputs.has-new-commits }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all history and tags
      - name: Check for new commits since last nightly
        id: check-new-commits
        shell: bash
        run: |
          if [ `git diff --name-only nightly-latest app native .changes | wc -l` -ne 0 ]; then
            echo "has-new-commits=true"  >> $GITHUB_OUTPUT ;
          else
            echo "has-new-commits=false" >> $GITHUB_OUTPUT ;
          fi

  tags:
    runs-on: ubuntu-latest
    needs:
     - run_checker
    if: ${{ needs.run_checker.outputs.should_run != 'false' }}
    # Map a step output to a job output
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
      build_num: ${{ steps.build_num.outputs.build_num }}
      prev_tag: 'nightly-latest'
    steps:
      - id: tag
        run: echo "tag=`date +%F`" >> $GITHUB_OUTPUT
      - id: build_num
        run: echo "build_num=`date +%s`" >> $GITHUB_OUTPUT

  
  build:
    uses: ./.github/workflows/build-app.yml
    needs:
     - tags
    with:
      artifacts_prefix: 'nightly-'
      build_num: ${{ needs.tags.outputs.build_num }}
      version: ${{ needs.tags.outputs.tag }}
      release_title: "Nightly ${{ needs.tags.outputs.tag }}"
      release_tag: nightly-${{ needs.tags.outputs.tag }}
    secrets: inherit

########  ##     ## ########  ##       ####  ######  ##     ## 
##     ## ##     ## ##     ## ##        ##  ##    ## ##     ## 
##     ## ##     ## ##     ## ##        ##  ##       ##     ## 
########  ##     ## ########  ##        ##   ######  ######### 
##        ##     ## ##     ## ##        ##        ## ##     ## 
##        ##     ## ##     ## ##        ##  ##    ## ##     ## 
##         #######  ########  ######## ####  ######  ##     ## 



########  ##          ###    ##    ##     ######  ########  #######  ########  ######## 
##     ## ##         ## ##    ##  ##     ##    ##    ##    ##     ## ##     ## ##       
##     ## ##        ##   ##    ####      ##          ##    ##     ## ##     ## ##       
########  ##       ##     ##    ##        ######     ##    ##     ## ########  ######   
##        ##       #########    ##             ##    ##    ##     ## ##   ##   ##       
##        ##       ##     ##    ##       ##    ##    ##    ##     ## ##    ##  ##       
##        ######## ##     ##    ##        ######     ##     #######  ##     ## ######## 


  google-play-store:
    runs-on: ubuntu-latest
    environment: release
    needs:
      - tags
      - build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: Android
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: Android-debug-symbols
      - name: Release Build to playstore
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: global.acter.a3
          releaseName: ${{ needs.tags.outputs.tag }}
          releaseFiles: app-release.aab
          # debugSymbols: "*.symbols"
          track: alpha
          status: completed

  publish:
    environment: nightly
    runs-on: ubuntu-latest
    name: Publish
    if: ${{ github.event.schedule }}
    needs:
      - tags
      - build
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Configure git
        run: | # make sure we have the tags and all
          git fetch --prune --unshallow --tags
          git config --global user.name 'Sari'
          git config --global user.email 'acter-sari@users.noreply.github.com'

      - name: Generate Changelog
        run: |
          cargo run -p mr_minutes -- --since nightly-latest --output nightly-changes-generated.md
          echo "** Changes since ${{ needs.tags.outputs.prev_tag }} **" > nightly-changes.md
          cat nightly-changes-generated.md >>  nightly-changes.md

      - name: "Generate docs"
        run: |
          echo "+++" > docs/content/nightly/${{ needs.tags.outputs.tag }}.md
          echo "title = \" Nightly ${{ needs.tags.outputs.tag }}\"" >> docs/content/nightly/${{ needs.tags.outputs.tag }}.md
          echo "template = \"nightlies/release.html\"" >> docs/content/nightly/${{ needs.tags.outputs.tag }}.md
          echo "date = ${{ needs.tags.outputs.tag }}" >> docs/content/nightly/${{ needs.tags.outputs.tag }}.md
          echo "+++" >>docs/content/nightly/${{ needs.tags.outputs.tag }}.md
          echo "" >>docs/content/nightly/${{ needs.tags.outputs.tag }}.md
          cat nightly-changes.md >> docs/content/nightly/${{ needs.tags.outputs.tag }}.md

      - name: Tag for nightly release
        run: |
          git add "docs/content/nightly/${{ needs.tags.outputs.tag }}.md"
          echo "Tagging ${{ needs.tags.outputs.tag }}" > notes.md
          echo "" >> notes.md
          cat nightly-changes.md >> notes.md
          git commit -F notes.md
          git tag nightly-${{ needs.tags.outputs.tag }}
          git tag -f nightly-latest
          git push -f origin main nightly-${{ needs.tags.outputs.tag }} nightly-latest
      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          # publish this nightly release now
          draft: true
          generate_release_notes: false
          name: Nightly ${{ needs.tags.outputs.tag }}
          tag_name: nightly-${{ needs.tags.outputs.tag }}
          body_path: nightly-changes.md
          prerelease: true
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}

      - name: Send message to nightly channel
        id: matrix-chat-message
        uses: fadenb/matrix-chat-message@v0.0.6
        with:
          homeserver: 'matrix.acter.global'
          token: ${{ secrets.NIGHTLY_MATRIX_TOKEN }}
          channel:  '!PsBFWhNhPEAfCBdApa:acter.global'
          message: |
            ## Nightly ${{ needs.tags.outputs.tag }} released

            Latest nightly builds have been built and [can be downloaded from here](https://dev.acter.global/nightly/${{ needs.tags.outputs.tag }}/).
            Direct install links:
             - ü§ñ [Android devices](https://github.com/acterglobal/a3/releases/download/nightly-${{ needs.tags.outputs.tag }}/acter-nightly-android-arm64-${{ needs.tags.outputs.tag }}.apk)
             - üçé [iOS devices](itms-services://?action=download-manifest&amp;url=https://github.com/acterglobal/a3/releases/download/nightly-${{ needs.tags.outputs.tag }}/ios-manifest.plist) (for ad-hoc registered devices only)

  publish_aur:
    environment: release
    needs:
      - tags
      - build
    name: Publish AUR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: Linux x64
      - name: Patch PKGBUILD file 
        run: |
          cp app/linux/packaging/aur/PKGBUILD-nightly PKGBUILD
          sed -i "s/%{{TAG}}%/${{ needs.tags.outputs.tag }}/g" PKGBUILD
          VERSION=$(echo ${{ needs.tags.outputs.tag }} | sed "s/-/./g")
          sed -i "s/%{{VERSION}}%/$VERSION/g" PKGBUILD
          sed -i "s/%{{PKGREL}}%/1/g" PKGBUILD
          sed -i "s/%{{LINUX_MD5}}%/`md5sum acter-nightly-linux-x64-${{ needs.tags.outputs.tag }}.tar.bz2  | awk '{print $1}'`/g" PKGBUILD
      - uses: KSXGitHub/github-actions-deploy-aur@v2.7.1
        name: Publish to AUR
        with:
          pkgname: acter-nightly-bin
          pkgbuild: ./PKGBUILD
          commit_username: Sari
          commit_email: sari@acter.global
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Updated to ${{ needs.tags.outputs.tag }}
