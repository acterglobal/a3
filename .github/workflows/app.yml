# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# name: App

# env:
#   RELEASE: true

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

jobs:
  # build-android:
  #   runs-on: ubuntu-latest
  #   name: Build Android
  #   continue-on-error: true
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Install supported toolchain
  #       id: rust_toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true

  #     - name: Cache Cargo
  #       id: cache-cargo
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ~/.cargo
  #         key: ${{ runner.os }}-cargo-${{ steps.rust_toolchain.outputs.rustc_hash }}-${{ hashFiles('./Cargo.toml') }}

  #     - name: Cache Rust
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           target
  #         key: ${{ runner.os }}-native-android-${{ steps.rust_toolchain.outputs.rustc_hash }}-${{ hashFiles('./Cargo.toml') }}

  #     - uses: nttld/setup-ndk@v1
  #       id: setup-ndk
  #       with:
  #         ndk-version: r23c
  #         add-to-path: false

  #     - name: Install cargo-make
  #       if: steps.cache-cargo.outputs.cache-hit != 'true'
  #       uses: davidB/rust-cargo-make@v1

  #     - uses: subosito/flutter-action@v2
  #       name: "Set up flutter"
  #       with:
  #         channel: 'stable'

  #     - name: Rust Android Setup
  #       if: steps.cache-cargo.outputs.cache-hit != 'true'
  #       run: cargo make setup-android
  #       env:
  #         ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

  #     - name: Rust Make Android
  #       run: cargo make --profile release android-arm
  #       env:
  #         ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

  #     - name: Ensure ffi-interface is up to date
  #       run: git diff --exit-code  app/packages/rust_sdk/lib/acter_flutter_sdk_ffi.dart

  #     - run: flutter build apk --target-platform android-arm64 --release
  #       working-directory: ./app

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: acter-${{ github.sha }}-arm64.apk
  #         path: app/build/app/outputs/apk/release/app-release.apk

  # build-ios:
  #   runs-on: macos-latest
  #   name: Build iOS
  #   continue-on-error: true
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install supported toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true
  #     - name: Install cargo-make
  #       uses: davidB/rust-cargo-make@v1
  #     - uses: Swatinem/rust-cache@v1
  #     - run: cargo make setup-ios
  #     - uses: subosito/flutter-action@v2
  #       name: "Set up flutter"
  #       with:
  #         channel: 'stable'
  #     - name: Build iOS FFI
  #       run: cargo make --profile release ios
  #     - name: Ensure ffi-interface is up to date
  #       run: git diff --exit-code  app/packages/rust_sdk/lib/acter_flutter_sdk_ffi.dart
  #     - name: Build ios package
  #       run: flutter build ios --no-codesign
  #       working-directory: ./app
