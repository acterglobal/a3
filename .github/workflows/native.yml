on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

name: Native

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  core:
    runs-on: ubuntu-latest
    name: Clippy & Test & Build ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: Core
            package: acter-core
            clippy_extras: --tests
          - name: CLI
            package: acter-cli
          - name: TUI
            package: acter-tui
          - name: media-cache-wrapper
            package: matrix-sdk-store-media-cache-wrapper
    steps:
      - uses: actions/checkout@v2
      - name: Install specific toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        name: Clippy
        with:
          command: clippy
          args: -p ${{matrix.package}} ${{matrix.clippy_extras}} -- -D warnings
      - uses: taiki-e/install-action@nextest
      - uses: actions-rs/cargo@v1
        name: Test
        with:
          command: nextest
          args: run -p ${{matrix.package}}
      - uses: actions-rs/cargo@v1
        name: Release Build
        with:
          command: build
          args: -p ${{matrix.package}} --release

  integrations:
    runs-on: ubuntu-latest
    # FIXME: remove once tests don't fail
    continue-on-error: true
    name: Clippy & Test ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: FFI
            target: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v2
      - name: Install specific toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: clippy
          target: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v1
      - uses: jlumbroso/free-disk-space@main
        name: Free Disk Space (Ubuntu)
        with:
          # this might remove tools that are actually needed,
          # when set to "true" but frees about 6 GB
          tool-cache: true
      - uses: subosito/flutter-action@v2
        name: Set up flutter
        with:
          flutter-version: '3.19'
          channel: 'stable'
      - uses: actions-rs/cargo@v1
        name: Clippy
        with:
          command: clippy
          args: -p acter --target ${{matrix.target}} -- -D warnings
      - uses: taiki-e/install-action@nextest
      - uses: actions-rs/cargo@v1
        name: Unit tests
        with:
          command: nextest
          args: run -p acter --target ${{matrix.target}} --lib
      - uses: actions-rs/cargo@v1
        name: Doctests
        with:
          command: test
          args: -p acter --target ${{matrix.target}} --doc

  ffigen:
    name: FFI-Gen up-to-date
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19'
          channel: 'stable'
      - name: Install supported rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: "Build FFI interface"
        run: cargo make ffigen
      # - name: "Check file is no different"
      #   run: git diff --exit-code app/packages/rust_sdk/lib/acter_flutter_sdk_ffi.dart
