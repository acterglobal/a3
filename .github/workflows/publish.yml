on:
  release:
    types: 
      # - released   # use this for actual releases
      - prereleased  # use this to trigger on test releases


jobs:
  microsoft-store:
    runs-on: windows-latest
    environment: release
    steps:

      - uses: dsaltares/fetch-gh-release-asset@master
        name: Download MSIX
        with:
          version: {{github.release.id}}
          regex: true
          file: "*.msix"
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: dsaltares/fetch-gh-release-asset@master
        name: Download changelogs and notes
        with:
          version: {{github.release.id}}
          regex: true
          file: "*.md"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup MS Store Developer CLI
        uses: microsoft/setup-msstore-cli@v1

      - name: Configure MS Store credentials
        run: msstore reconfigure --tenantId ${{ secrets.AZURE_AD_TENANT_ID }} --clientId ${{ secrets.AZURE_AD_CLIENT_ID }} --clientSecret ${{ secrets.AZURE_AD_CLIENT_SECRET }} --sellerId ${{ secrets.MS_STORE_SELLER_ID }}

      - name: MS Store Publish
        run: msstore publish -v "*.msix"
        
  google-play-store:
    runs-on: ubuntu-latest
    environment: release
    steps:

      - uses: dsaltares/fetch-gh-release-asset@master
        name: Download "aab"
        with:
          version: {{github.release.id}}
          regex: true
          file: "*.aab"
          token: ${{ secrets.GITHUB_TOKEN }}

      # - uses: dsaltares/fetch-gh-release-asset@master
      #   name: Download changelogs and notes
      #   with:
      #     version: {{github.release.id}}
      #     regex: true
      #     file: "*.md"
      #     token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Format changelog 
      #   run: |


      - name: Release Build to playstore
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: global.acter.a3
          releaseName: {{github.release.name || github.release.tag_name}}
          releaseFiles: *.aab
          track: alpha
          status: completed

  apple-store-ios:
    runs-on: macos-latest
    environment: release
    steps:

      - uses: dsaltares/fetch-gh-release-asset@master
        name: Download "ipa"
        with:
          version: {{github.release.id}}
          regex: true
          file: "*.ipa"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to App Store
        env:
          APPLE_API_KEY_BASE64: ${{ secrets.APPLE_API_KEY_BASE64 }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_ISSUER_ID: ${{ secrets.APPLE_ISSUER_ID }}
        run: |
          mkdir .private_keys
          echo -n "$APPLE_API_KEY_BASE64" | base64 --decode --output ".private_keys/AuthKey_$APPLE_API_KEY_ID.p8"
          xcrun altool --upload-app --type ios --file "*.ipa" \
              --apiKey "$APPLE_API_KEY_ID" --apiIssuer "$APPLE_ISSUER_ID"
        shell: bash