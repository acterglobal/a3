on:
  push:
  pull_request:
    branches: [ main ]

name: Build Check

jobs:

  rust-style:
    runs-on: ubuntu-latest
    name: Checking Format
    steps:
      - uses: actions/checkout@v2
      - name: Install specific toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - uses: actions-rs/cargo@v1
        name: Rust Format
        with:
          command: fmt
          args: --all --check

  clippy:
    runs-on: ubuntu-latest
    name: Build and check style // ${{ matrix.target }}
    strategy:
      matrix:
        target:
          - aarch64-linux-android
          - x86_64-unknown-linux-gnu
          - x86_64-apple-ios

    steps:
      - uses: actions/checkout@v2
      - name: Install specific toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          target: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        name: Clippy
        with:
          command: clippy
          args: -p effektio-core -p effektio --target ${{matrix.target}} -- -D warnings


  test-cli:
    runs-on: ubuntu-latest
    name: Checking CLI
    steps:
      - uses: actions/checkout@v2
      - name: Install supported toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - uses: actions-rs/cargo@v1
        name: Clippy
        with:
          command: clippy
          args: -p effektio-cli  -- -D warnings

      - uses: actions-rs/cargo@v1
        name: Testing
        with:
          command: test -p effektio-cli

      - uses: actions-rs/cargo@v1
        name: Building
        with:
          command: build --release -p effektio-cli


  build-android:
    runs-on: ubuntu-latest
    name: Build Android App
    # FIXME: remove once tests don't fail
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: Install supported toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: aarch64-linux-androi armv7-linux-androideab x86_64-linux-androi i686-linux-android
      - uses: nttld/setup-ndk@v1
        with:
          # FIXME: cargo-ndk doesn't work with latest 
          ndk-version: r22
      - uses: actions-rs/cargo@v1
        name: Setup build tool
        with:
          command: make setup
      - uses: actions-rs/cargo@v1
        name: Build Android FFI
        with:
          command: make build android
      - uses: subosito/flutter-action@v2
        name: "Set up flutter"
        with:
          toolchain: 'stable'
      - run: flutter pub get
      # FIXME: tests are not set up to work yet
      - run: flutter test
      - run: flutter build apk
      - run: flutter build appbundle

  build-ios:
    runs-on: macos-latest
    name: Build iOS App
    # FIXME: remove once tests don't fail
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: Install supported toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: aarch64-apple-ios x86_64-apple-ios
      - uses: actions-rs/cargo@v1
        name: Setup build tool
        with:
          command: make setup
      - uses: actions-rs/cargo@v1
        name: Build iOS FFI
        with:
          command: make build ios
      - uses: subosito/flutter-action@v2
        name: "Set up flutter"
        with:
          toolchain: 'stable'
      - run: flutter pub get
      # FIXME: tests are not set up to work yet
      - run: flutter test
      - run: flutter build ios --release --no-codesign