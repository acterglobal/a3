(function() {var type_impls = {
"ruma":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StrippedStateEvent%3CRoomMemberEventContent%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/room/member.rs.html#501\">source</a><a href=\"#impl-StrippedStateEvent%3CRoomMemberEventContent%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"ruma/events/struct.StrippedStateEvent.html\" title=\"struct ruma::events::StrippedStateEvent\">StrippedStateEvent</a>&lt;<a class=\"struct\" href=\"ruma/events/room/member/struct.RoomMemberEventContent.html\" title=\"struct ruma::events::room::member::RoomMemberEventContent\">RoomMemberEventContent</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.details\" class=\"method\"><a class=\"src rightside\" href=\"src/ruma_events/room/member.rs.html#506\">source</a><h4 class=\"code-header\">pub fn <a href=\"ruma/events/struct.StrippedStateEvent.html#tymethod.details\" class=\"fn\">details</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ruma/events/room/member/struct.MembershipDetails.html\" title=\"struct ruma::events::room::member::MembershipDetails\">MembershipDetails</a>&lt;'_&gt;</h4></section></summary><div class=\"docblock\"><p>Obtain the details about this event that are required to calculate a membership change.</p>\n<p>This is required when you want to calculate the change a redacted <code>m.room.member</code> event\nmade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.membership_change\" class=\"method\"><a class=\"src rightside\" href=\"src/ruma_events/room/member.rs.html#519-522\">source</a><h4 class=\"code-header\">pub fn <a href=\"ruma/events/struct.StrippedStateEvent.html#tymethod.membership_change\" class=\"fn\">membership_change</a>&lt;'a&gt;(\n    &amp;'a self,\n    prev_details: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"ruma/events/room/member/struct.MembershipDetails.html\" title=\"struct ruma::events::room::member::MembershipDetails\">MembershipDetails</a>&lt;'a&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"ruma/events/room/member/enum.MembershipChange.html\" title=\"enum ruma::events::room::member::MembershipChange\">MembershipChange</a>&lt;'a&gt;</h4></section></summary><div class=\"docblock\"><p>Helper function for membership change.</p>\n<p>Since stripped events don’t have <code>unsigned.prev_content</code>, you have to pass the <code>.details()</code>\nof the previous <code>m.room.member</code> event manually (if there is a previous <code>m.room.member</code>\nevent).</p>\n<p>Check <a href=\"https://spec.matrix.org/latest/client-server-api/#mroommember\">the specification</a> for details.</p>\n</div></details></div></details>",0,"ruma::events::room::member::StrippedRoomMemberEvent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StrippedStateEvent%3CRoomPowerLevelsEventContent%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/room/power_levels.rs.html#208\">source</a><a href=\"#impl-StrippedStateEvent%3CRoomPowerLevelsEventContent%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"ruma/events/struct.StrippedStateEvent.html\" title=\"struct ruma::events::StrippedStateEvent\">StrippedStateEvent</a>&lt;<a class=\"struct\" href=\"ruma/events/room/power_levels/struct.RoomPowerLevelsEventContent.html\" title=\"struct ruma::events::room::power_levels::RoomPowerLevelsEventContent\">RoomPowerLevelsEventContent</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.power_levels\" class=\"method\"><a class=\"src rightside\" href=\"src/ruma_events/room/power_levels.rs.html#210\">source</a><h4 class=\"code-header\">pub fn <a href=\"ruma/events/struct.StrippedStateEvent.html#tymethod.power_levels\" class=\"fn\">power_levels</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ruma/events/room/power_levels/struct.RoomPowerLevels.html\" title=\"struct ruma::events::room::power_levels::RoomPowerLevels\">RoomPowerLevels</a></h4></section></summary><div class=\"docblock\"><p>Obtain the effective power levels from this event.</p>\n</div></details></div></details>",0,"ruma::events::room::power_levels::StrippedRoomPowerLevelsEvent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-StrippedStateEvent%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#299\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-StrippedStateEvent%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, C&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"ruma/events/struct.StrippedStateEvent.html\" title=\"struct ruma::events::StrippedStateEvent\">StrippedStateEvent</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"ruma/events/trait.PossiblyRedactedStateEventContent.html\" title=\"trait ruma::events::PossiblyRedactedStateEventContent\">PossiblyRedactedStateEventContent</a> + <a class=\"trait\" href=\"ruma/events/trait.EventContentFromType.html\" title=\"trait ruma::events::EventContentFromType\">EventContentFromType</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#299\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ruma/events/struct.StrippedStateEvent.html\" title=\"struct ruma::events::StrippedStateEvent\">StrippedStateEvent</a>&lt;C&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","ruma::events::call::member::StrippedCallMemberEvent","ruma::events::policy::rule::room::StrippedPolicyRuleRoomEvent","ruma::events::policy::rule::server::StrippedPolicyRuleServerEvent","ruma::events::policy::rule::user::StrippedPolicyRuleUserEvent","ruma::events::room::aliases::StrippedRoomAliasesEvent","ruma::events::room::avatar::StrippedRoomAvatarEvent","ruma::events::room::canonical_alias::StrippedRoomCanonicalAliasEvent","ruma::events::room::create::StrippedRoomCreateEvent","ruma::events::room::encryption::StrippedRoomEncryptionEvent","ruma::events::room::guest_access::StrippedRoomGuestAccessEvent","ruma::events::room::history_visibility::StrippedRoomHistoryVisibilityEvent","ruma::events::room::join_rules::StrippedRoomJoinRulesEvent","ruma::events::room::member::StrippedRoomMemberEvent","ruma::events::room::name::StrippedRoomNameEvent","ruma::events::room::pinned_events::StrippedRoomPinnedEventsEvent","ruma::events::room::power_levels::StrippedRoomPowerLevelsEvent","ruma::events::room::server_acl::StrippedRoomServerAclEvent","ruma::events::room::third_party_invite::StrippedRoomThirdPartyInviteEvent","ruma::events::room::tombstone::StrippedRoomTombstoneEvent","ruma::events::room::topic::StrippedRoomTopicEvent","ruma::events::space::child::StrippedSpaceChildEvent","ruma::events::space::parent::StrippedSpaceParentEvent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-StrippedStateEvent%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#299\">source</a><a href=\"#impl-Clone-for-StrippedStateEvent%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"ruma/events/struct.StrippedStateEvent.html\" title=\"struct ruma::events::StrippedStateEvent\">StrippedStateEvent</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"ruma/events/trait.PossiblyRedactedStateEventContent.html\" title=\"trait ruma::events::PossiblyRedactedStateEventContent\">PossiblyRedactedStateEventContent</a>,\n    &lt;C as <a class=\"trait\" href=\"ruma/events/trait.PossiblyRedactedStateEventContent.html\" title=\"trait ruma::events::PossiblyRedactedStateEventContent\">PossiblyRedactedStateEventContent</a>&gt;::<a class=\"associatedtype\" href=\"ruma/events/trait.PossiblyRedactedStateEventContent.html#associatedtype.StateKey\" title=\"type ruma::events::PossiblyRedactedStateEventContent::StateKey\">StateKey</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#299\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ruma/events/struct.StrippedStateEvent.html\" title=\"struct ruma::events::StrippedStateEvent\">StrippedStateEvent</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ruma::events::call::member::StrippedCallMemberEvent","ruma::events::policy::rule::room::StrippedPolicyRuleRoomEvent","ruma::events::policy::rule::server::StrippedPolicyRuleServerEvent","ruma::events::policy::rule::user::StrippedPolicyRuleUserEvent","ruma::events::room::aliases::StrippedRoomAliasesEvent","ruma::events::room::avatar::StrippedRoomAvatarEvent","ruma::events::room::canonical_alias::StrippedRoomCanonicalAliasEvent","ruma::events::room::create::StrippedRoomCreateEvent","ruma::events::room::encryption::StrippedRoomEncryptionEvent","ruma::events::room::guest_access::StrippedRoomGuestAccessEvent","ruma::events::room::history_visibility::StrippedRoomHistoryVisibilityEvent","ruma::events::room::join_rules::StrippedRoomJoinRulesEvent","ruma::events::room::member::StrippedRoomMemberEvent","ruma::events::room::name::StrippedRoomNameEvent","ruma::events::room::pinned_events::StrippedRoomPinnedEventsEvent","ruma::events::room::power_levels::StrippedRoomPowerLevelsEvent","ruma::events::room::server_acl::StrippedRoomServerAclEvent","ruma::events::room::third_party_invite::StrippedRoomThirdPartyInviteEvent","ruma::events::room::tombstone::StrippedRoomTombstoneEvent","ruma::events::room::topic::StrippedRoomTopicEvent","ruma::events::space::child::StrippedSpaceChildEvent","ruma::events::space::parent::StrippedSpaceParentEvent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-StrippedStateEvent%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#299\">source</a><a href=\"#impl-Debug-for-StrippedStateEvent%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"ruma/events/struct.StrippedStateEvent.html\" title=\"struct ruma::events::StrippedStateEvent\">StrippedStateEvent</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"ruma/events/trait.PossiblyRedactedStateEventContent.html\" title=\"trait ruma::events::PossiblyRedactedStateEventContent\">PossiblyRedactedStateEventContent</a>,\n    &lt;C as <a class=\"trait\" href=\"ruma/events/trait.PossiblyRedactedStateEventContent.html\" title=\"trait ruma::events::PossiblyRedactedStateEventContent\">PossiblyRedactedStateEventContent</a>&gt;::<a class=\"associatedtype\" href=\"ruma/events/trait.PossiblyRedactedStateEventContent.html#associatedtype.StateKey\" title=\"type ruma::events::PossiblyRedactedStateEventContent::StateKey\">StateKey</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#299\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","ruma::events::call::member::StrippedCallMemberEvent","ruma::events::policy::rule::room::StrippedPolicyRuleRoomEvent","ruma::events::policy::rule::server::StrippedPolicyRuleServerEvent","ruma::events::policy::rule::user::StrippedPolicyRuleUserEvent","ruma::events::room::aliases::StrippedRoomAliasesEvent","ruma::events::room::avatar::StrippedRoomAvatarEvent","ruma::events::room::canonical_alias::StrippedRoomCanonicalAliasEvent","ruma::events::room::create::StrippedRoomCreateEvent","ruma::events::room::encryption::StrippedRoomEncryptionEvent","ruma::events::room::guest_access::StrippedRoomGuestAccessEvent","ruma::events::room::history_visibility::StrippedRoomHistoryVisibilityEvent","ruma::events::room::join_rules::StrippedRoomJoinRulesEvent","ruma::events::room::member::StrippedRoomMemberEvent","ruma::events::room::name::StrippedRoomNameEvent","ruma::events::room::pinned_events::StrippedRoomPinnedEventsEvent","ruma::events::room::power_levels::StrippedRoomPowerLevelsEvent","ruma::events::room::server_acl::StrippedRoomServerAclEvent","ruma::events::room::third_party_invite::StrippedRoomThirdPartyInviteEvent","ruma::events::room::tombstone::StrippedRoomTombstoneEvent","ruma::events::room::topic::StrippedRoomTopicEvent","ruma::events::space::child::StrippedSpaceChildEvent","ruma::events::space::parent::StrippedSpaceParentEvent"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()