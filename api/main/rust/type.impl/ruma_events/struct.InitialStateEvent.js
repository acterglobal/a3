(function() {var type_impls = {
"ruma_events":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InitialStateEvent%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#329-361\">source</a><a href=\"#impl-InitialStateEvent%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"ruma_events/trait.StaticStateEventContent.html\" title=\"trait ruma_events::StaticStateEventContent\">StaticStateEventContent</a>&gt; <a class=\"struct\" href=\"ruma_events/struct.InitialStateEvent.html\" title=\"struct ruma_events::InitialStateEvent\">InitialStateEvent</a>&lt;C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#333-338\">source</a><h4 class=\"code-header\">pub fn <a href=\"ruma_events/struct.InitialStateEvent.html#tymethod.new\" class=\"fn\">new</a>(content: C) -&gt; Self<div class=\"where\">where\n    C: <a class=\"trait\" href=\"ruma_events/trait.StaticStateEventContent.html\" title=\"trait ruma_events::StaticStateEventContent\">StaticStateEventContent</a>&lt;StateKey = <a class=\"struct\" href=\"ruma_events/struct.EmptyStateKey.html\" title=\"struct ruma_events::EmptyStateKey\">EmptyStateKey</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Create a new <code>InitialStateEvent</code> for an event type with an empty state key.</p>\n<p>For cases where the state key is not empty, use a struct literal to create the event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_raw\" class=\"method\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#347-349\">source</a><h4 class=\"code-header\">pub fn <a href=\"ruma_events/struct.InitialStateEvent.html#tymethod.to_raw\" class=\"fn\">to_raw</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ruma_common/serde/raw/struct.Raw.html\" title=\"struct ruma_common::serde::raw::Raw\">Raw</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Shorthand for <code>Raw::new(self).unwrap()</code>.</p>\n<p>Since none of the content types in Ruma ever return an error in serialization, this will\nnever panic with <code>C</code> being a type from Ruma. However, if you use a custom content type\nwith a <code>Serialize</code> implementation that can error (for example because it contains an\n<code>enum</code> with one or more variants that use the <code>#[serde(skip)]</code> attribute), this method\ncan panic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_raw_any\" class=\"method\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#358-360\">source</a><h4 class=\"code-header\">pub fn <a href=\"ruma_events/struct.InitialStateEvent.html#tymethod.to_raw_any\" class=\"fn\">to_raw_any</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ruma_common/serde/raw/struct.Raw.html\" title=\"struct ruma_common::serde::raw::Raw\">Raw</a>&lt;<a class=\"enum\" href=\"ruma_events/enum.AnyInitialStateEvent.html\" title=\"enum ruma_events::AnyInitialStateEvent\">AnyInitialStateEvent</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Shorthand for <code>self.to_raw().cast::&lt;AnyInitialStateEvent&gt;()</code>.</p>\n<p>Since none of the content types in Ruma ever return an error in serialization, this will\nnever panic with <code>C</code> being a type from Ruma. However, if you use a custom content type\nwith a <code>Serialize</code> implementation that can error (for example because it contains an\n<code>enum</code> with one or more variants that use the <code>#[serde(skip)]</code> attribute), this method\ncan panic.</p>\n</div></details></div></details>",0,"ruma_events::call::member::InitialCallMemberEvent","ruma_events::policy::rule::room::InitialPolicyRuleRoomEvent","ruma_events::policy::rule::server::InitialPolicyRuleServerEvent","ruma_events::policy::rule::user::InitialPolicyRuleUserEvent","ruma_events::room::aliases::InitialRoomAliasesEvent","ruma_events::room::avatar::InitialRoomAvatarEvent","ruma_events::room::canonical_alias::InitialRoomCanonicalAliasEvent","ruma_events::room::create::InitialRoomCreateEvent","ruma_events::room::encryption::InitialRoomEncryptionEvent","ruma_events::room::guest_access::InitialRoomGuestAccessEvent","ruma_events::room::history_visibility::InitialRoomHistoryVisibilityEvent","ruma_events::room::join_rules::InitialRoomJoinRulesEvent","ruma_events::room::member::InitialRoomMemberEvent","ruma_events::room::name::InitialRoomNameEvent","ruma_events::room::pinned_events::InitialRoomPinnedEventsEvent","ruma_events::room::power_levels::InitialRoomPowerLevelsEvent","ruma_events::room::server_acl::InitialRoomServerAclEvent","ruma_events::room::third_party_invite::InitialRoomThirdPartyInviteEvent","ruma_events::room::tombstone::InitialRoomTombstoneEvent","ruma_events::room::topic::InitialRoomTopicEvent","ruma_events::space::child::InitialSpaceChildEvent","ruma_events::space::parent::InitialSpaceParentEvent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-InitialStateEvent%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#315\">source</a><a href=\"#impl-Debug-for-InitialStateEvent%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"ruma_events/trait.StaticStateEventContent.html\" title=\"trait ruma_events::StaticStateEventContent\">StaticStateEventContent</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"ruma_events/struct.InitialStateEvent.html\" title=\"struct ruma_events::InitialStateEvent\">InitialStateEvent</a>&lt;C&gt;<div class=\"where\">where\n    C::<a class=\"associatedtype\" href=\"ruma_events/trait.StateEventContent.html#associatedtype.StateKey\" title=\"type ruma_events::StateEventContent::StateKey\">StateKey</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#315\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","ruma_events::call::member::InitialCallMemberEvent","ruma_events::policy::rule::room::InitialPolicyRuleRoomEvent","ruma_events::policy::rule::server::InitialPolicyRuleServerEvent","ruma_events::policy::rule::user::InitialPolicyRuleUserEvent","ruma_events::room::aliases::InitialRoomAliasesEvent","ruma_events::room::avatar::InitialRoomAvatarEvent","ruma_events::room::canonical_alias::InitialRoomCanonicalAliasEvent","ruma_events::room::create::InitialRoomCreateEvent","ruma_events::room::encryption::InitialRoomEncryptionEvent","ruma_events::room::guest_access::InitialRoomGuestAccessEvent","ruma_events::room::history_visibility::InitialRoomHistoryVisibilityEvent","ruma_events::room::join_rules::InitialRoomJoinRulesEvent","ruma_events::room::member::InitialRoomMemberEvent","ruma_events::room::name::InitialRoomNameEvent","ruma_events::room::pinned_events::InitialRoomPinnedEventsEvent","ruma_events::room::power_levels::InitialRoomPowerLevelsEvent","ruma_events::room::server_acl::InitialRoomServerAclEvent","ruma_events::room::third_party_invite::InitialRoomThirdPartyInviteEvent","ruma_events::room::tombstone::InitialRoomTombstoneEvent","ruma_events::room::topic::InitialRoomTopicEvent","ruma_events::space::child::InitialSpaceChildEvent","ruma_events::space::parent::InitialSpaceParentEvent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-InitialStateEvent%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#315\">source</a><a href=\"#impl-Clone-for-InitialStateEvent%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"ruma_events/trait.StaticStateEventContent.html\" title=\"trait ruma_events::StaticStateEventContent\">StaticStateEventContent</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"ruma_events/struct.InitialStateEvent.html\" title=\"struct ruma_events::InitialStateEvent\">InitialStateEvent</a>&lt;C&gt;<div class=\"where\">where\n    C::<a class=\"associatedtype\" href=\"ruma_events/trait.StateEventContent.html#associatedtype.StateKey\" title=\"type ruma_events::StateEventContent::StateKey\">StateKey</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#315\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ruma_events/struct.InitialStateEvent.html\" title=\"struct ruma_events::InitialStateEvent\">InitialStateEvent</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ruma_events::call::member::InitialCallMemberEvent","ruma_events::policy::rule::room::InitialPolicyRuleRoomEvent","ruma_events::policy::rule::server::InitialPolicyRuleServerEvent","ruma_events::policy::rule::user::InitialPolicyRuleUserEvent","ruma_events::room::aliases::InitialRoomAliasesEvent","ruma_events::room::avatar::InitialRoomAvatarEvent","ruma_events::room::canonical_alias::InitialRoomCanonicalAliasEvent","ruma_events::room::create::InitialRoomCreateEvent","ruma_events::room::encryption::InitialRoomEncryptionEvent","ruma_events::room::guest_access::InitialRoomGuestAccessEvent","ruma_events::room::history_visibility::InitialRoomHistoryVisibilityEvent","ruma_events::room::join_rules::InitialRoomJoinRulesEvent","ruma_events::room::member::InitialRoomMemberEvent","ruma_events::room::name::InitialRoomNameEvent","ruma_events::room::pinned_events::InitialRoomPinnedEventsEvent","ruma_events::room::power_levels::InitialRoomPowerLevelsEvent","ruma_events::room::server_acl::InitialRoomServerAclEvent","ruma_events::room::third_party_invite::InitialRoomThirdPartyInviteEvent","ruma_events::room::tombstone::InitialRoomTombstoneEvent","ruma_events::room::topic::InitialRoomTopicEvent","ruma_events::space::child::InitialSpaceChildEvent","ruma_events::space::parent::InitialSpaceParentEvent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-InitialStateEvent%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#372-383\">source</a><a href=\"#impl-Serialize-for-InitialStateEvent%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"ruma_events/trait.StaticStateEventContent.html\" title=\"trait ruma_events::StaticStateEventContent\">StaticStateEventContent</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"ruma_events/struct.InitialStateEvent.html\" title=\"struct ruma_events::InitialStateEvent\">InitialStateEvent</a>&lt;C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#373-382\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","ruma_events::call::member::InitialCallMemberEvent","ruma_events::policy::rule::room::InitialPolicyRuleRoomEvent","ruma_events::policy::rule::server::InitialPolicyRuleServerEvent","ruma_events::policy::rule::user::InitialPolicyRuleUserEvent","ruma_events::room::aliases::InitialRoomAliasesEvent","ruma_events::room::avatar::InitialRoomAvatarEvent","ruma_events::room::canonical_alias::InitialRoomCanonicalAliasEvent","ruma_events::room::create::InitialRoomCreateEvent","ruma_events::room::encryption::InitialRoomEncryptionEvent","ruma_events::room::guest_access::InitialRoomGuestAccessEvent","ruma_events::room::history_visibility::InitialRoomHistoryVisibilityEvent","ruma_events::room::join_rules::InitialRoomJoinRulesEvent","ruma_events::room::member::InitialRoomMemberEvent","ruma_events::room::name::InitialRoomNameEvent","ruma_events::room::pinned_events::InitialRoomPinnedEventsEvent","ruma_events::room::power_levels::InitialRoomPowerLevelsEvent","ruma_events::room::server_acl::InitialRoomServerAclEvent","ruma_events::room::third_party_invite::InitialRoomThirdPartyInviteEvent","ruma_events::room::tombstone::InitialRoomTombstoneEvent","ruma_events::room::topic::InitialRoomTopicEvent","ruma_events::space::child::InitialSpaceChildEvent","ruma_events::space::parent::InitialSpaceParentEvent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-InitialStateEvent%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#363-370\">source</a><a href=\"#impl-Default-for-InitialStateEvent%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"ruma_events/struct.InitialStateEvent.html\" title=\"struct ruma_events::InitialStateEvent\">InitialStateEvent</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"ruma_events/trait.StaticStateEventContent.html\" title=\"trait ruma_events::StaticStateEventContent\">StaticStateEventContent</a>&lt;StateKey = <a class=\"struct\" href=\"ruma_events/struct.EmptyStateKey.html\" title=\"struct ruma_events::EmptyStateKey\">EmptyStateKey</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#367-369\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","ruma_events::call::member::InitialCallMemberEvent","ruma_events::policy::rule::room::InitialPolicyRuleRoomEvent","ruma_events::policy::rule::server::InitialPolicyRuleServerEvent","ruma_events::policy::rule::user::InitialPolicyRuleUserEvent","ruma_events::room::aliases::InitialRoomAliasesEvent","ruma_events::room::avatar::InitialRoomAvatarEvent","ruma_events::room::canonical_alias::InitialRoomCanonicalAliasEvent","ruma_events::room::create::InitialRoomCreateEvent","ruma_events::room::encryption::InitialRoomEncryptionEvent","ruma_events::room::guest_access::InitialRoomGuestAccessEvent","ruma_events::room::history_visibility::InitialRoomHistoryVisibilityEvent","ruma_events::room::join_rules::InitialRoomJoinRulesEvent","ruma_events::room::member::InitialRoomMemberEvent","ruma_events::room::name::InitialRoomNameEvent","ruma_events::room::pinned_events::InitialRoomPinnedEventsEvent","ruma_events::room::power_levels::InitialRoomPowerLevelsEvent","ruma_events::room::server_acl::InitialRoomServerAclEvent","ruma_events::room::third_party_invite::InitialRoomThirdPartyInviteEvent","ruma_events::room::tombstone::InitialRoomTombstoneEvent","ruma_events::room::topic::InitialRoomTopicEvent","ruma_events::space::child::InitialSpaceChildEvent","ruma_events::space::parent::InitialSpaceParentEvent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-InitialStateEvent%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#315\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-InitialStateEvent%3CC%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de, C&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"ruma_events/struct.InitialStateEvent.html\" title=\"struct ruma_events::InitialStateEvent\">InitialStateEvent</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"ruma_events/trait.EventContentFromType.html\" title=\"trait ruma_events::EventContentFromType\">EventContentFromType</a> + <a class=\"trait\" href=\"ruma_events/trait.StaticStateEventContent.html\" title=\"trait ruma_events::StaticStateEventContent\">StaticStateEventContent</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ruma_events/kinds.rs.html#315\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","ruma_events::call::member::InitialCallMemberEvent","ruma_events::policy::rule::room::InitialPolicyRuleRoomEvent","ruma_events::policy::rule::server::InitialPolicyRuleServerEvent","ruma_events::policy::rule::user::InitialPolicyRuleUserEvent","ruma_events::room::aliases::InitialRoomAliasesEvent","ruma_events::room::avatar::InitialRoomAvatarEvent","ruma_events::room::canonical_alias::InitialRoomCanonicalAliasEvent","ruma_events::room::create::InitialRoomCreateEvent","ruma_events::room::encryption::InitialRoomEncryptionEvent","ruma_events::room::guest_access::InitialRoomGuestAccessEvent","ruma_events::room::history_visibility::InitialRoomHistoryVisibilityEvent","ruma_events::room::join_rules::InitialRoomJoinRulesEvent","ruma_events::room::member::InitialRoomMemberEvent","ruma_events::room::name::InitialRoomNameEvent","ruma_events::room::pinned_events::InitialRoomPinnedEventsEvent","ruma_events::room::power_levels::InitialRoomPowerLevelsEvent","ruma_events::room::server_acl::InitialRoomServerAclEvent","ruma_events::room::third_party_invite::InitialRoomThirdPartyInviteEvent","ruma_events::room::tombstone::InitialRoomTombstoneEvent","ruma_events::room::topic::InitialRoomTopicEvent","ruma_events::space::child::InitialSpaceChildEvent","ruma_events::space::parent::InitialSpaceParentEvent"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()