(function() {var type_impls = {
"opentelemetry":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OrderMap%3CK,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#17-32\">source</a><a href=\"#impl-OrderMap%3CK,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#20-22\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new map. (Does not allocate)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#29-31\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new map with capacity for <code>n</code> key-value pairs. (Does not\nallocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details></div></details>",0,"opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#34-161\">source</a><a href=\"#impl-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#40-42\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, hash_builder: S) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new map with capacity for <code>n</code> key-value pairs. (Does not\nallocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#48-50\">source</a><h4 class=\"code-header\">pub const fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: S) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new map with <code>hash_builder</code>.</p>\n<p>This function is <code>const</code>, so it\ncan be called in <code>static</code> contexts.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#53-55\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hasher\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#58-60\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.hasher\" class=\"fn\">hasher</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the map’s <code>BuildHasher</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#66-68\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of key-value pairs in the map.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#74-76\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the map contains no elements.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#79-81\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"indexmap/map/iter/struct.Iter.html\" title=\"struct indexmap::map::iter::Iter\">Iter</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over the key-value pairs of the map, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#84-86\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"indexmap/map/iter/struct.IterMut.html\" title=\"struct indexmap::map::iter::IterMut\">IterMut</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over the key-value pairs of the map, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.keys\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#89-91\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.keys\" class=\"fn\">keys</a>(&amp;self) -&gt; <a class=\"struct\" href=\"indexmap/map/iter/struct.Keys.html\" title=\"struct indexmap::map::iter::Keys\">Keys</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over the keys of the map, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_keys\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#94-96\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.into_keys\" class=\"fn\">into_keys</a>(self) -&gt; <a class=\"struct\" href=\"indexmap/map/iter/struct.IntoKeys.html\" title=\"struct indexmap::map::iter::IntoKeys\">IntoKeys</a>&lt;K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Return an owning iterator over the keys of the map, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#99-101\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.values\" class=\"fn\">values</a>(&amp;self) -&gt; <a class=\"struct\" href=\"indexmap/map/iter/struct.Values.html\" title=\"struct indexmap::map::iter::Values\">Values</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values of the map, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#105-107\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.values_mut\" class=\"fn\">values_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"indexmap/map/iter/struct.ValuesMut.html\" title=\"struct indexmap::map::iter::ValuesMut\">ValuesMut</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over mutable references to the values of the map,\nin their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_values\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#110-112\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.into_values\" class=\"fn\">into_values</a>(self) -&gt; <a class=\"struct\" href=\"indexmap/map/iter/struct.IntoValues.html\" title=\"struct indexmap::map::iter::IntoValues\">IntoValues</a>&lt;K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Return an owning iterator over the values of the map, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#117-119\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Remove all key-value pairs in the map, while preserving its capacity.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#124-126\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens the map, keeping the first <code>len</code> elements and dropping the rest.</p>\n<p>If <code>len</code> is greater than the map’s current length, this has no effect.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#141-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"indexmap/map/iter/struct.Drain.html\" title=\"struct indexmap::map::iter::Drain\">Drain</a>&lt;'_, K, V&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Clears the <code>IndexMap</code> in the given index range, returning those\nkey-value pairs as a drain iterator.</p>\n<p>The range may be any type that implements <code>RangeBounds&lt;usize&gt;</code>,\nincluding all of the <code>std::ops::Range*</code> types, or even a tuple pair of\n<code>Bound</code> start and end values. To drain the map entirely, use <code>RangeFull</code>\nlike <code>map.drain(..)</code>.</p>\n<p>This shifts down all entries following the drained range to fill the\ngap, and keeps the allocated memory for reuse.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#155-160\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.split_off\" class=\"fn\">split_off</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits the collection into two at the given index.</p>\n<p>Returns a newly allocated map containing the elements in the range\n<code>[at, len)</code>. After the call, the original map will be left containing\nthe elements <code>[0, at)</code> with its previous capacity unchanged.</p>\n<p><em><strong>Panics</strong></em> if <code>at &gt; len</code>.</p>\n</div></details></div></details>",0,"opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#163-363\">source</a><a href=\"#impl-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#171-173\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more key-value pairs.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#178-180\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the map as much as possible.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#195-197\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, key: K, value: V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;</h4></section></summary><div class=\"docblock\"><p>Insert a key-value pair in the map.</p>\n<p>If an equivalent key already exists in the map: the key remains and\nretains in its place in the order, its corresponding value is updated\nwith <code>value</code> and the older value is returned inside <code>Some(_)</code>.</p>\n<p>If no equivalent key existed in the map: the new key-value pair is\ninserted, last in order, and <code>None</code> is returned.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n<p>See also <a href=\"#method.entry\"><code>entry</code></a> if you you want to insert <em>or</em> modify\nor if you need to get the index of the corresponding key-value pair.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_full\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#212-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.insert_full\" class=\"fn\">insert_full</a>(&amp;mut self, key: K, value: V) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;)</h4></section></summary><div class=\"docblock\"><p>Insert a key-value pair in the map, and get their index.</p>\n<p>If an equivalent key already exists in the map: the key remains and\nretains in its place in the order, its corresponding value is updated\nwith <code>value</code> and the older value is returned inside <code>(index, Some(_))</code>.</p>\n<p>If no equivalent key existed in the map: the new key-value pair is\ninserted, last in order, and <code>(index, None)</code> is returned.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n<p>See also <a href=\"#method.entry\"><code>entry</code></a> if you you want to insert <em>or</em> modify\nor if you need to get the index of the corresponding key-value pair.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.entry\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#220-222\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.entry\" class=\"fn\">entry</a>(&amp;mut self, key: K) -&gt; <a class=\"enum\" href=\"indexmap/map/core/enum.Entry.html\" title=\"enum indexmap::map::core::Entry\">Entry</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Get the given key’s corresponding entry in the map for insertion and/or\nin-place manipulation.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#227-232\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.contains_key\" class=\"fn\">contains_key</a>&lt;Q&gt;(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return <code>true</code> if an equivalent to <code>key</code> exists in the map.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#238-243\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.get\" class=\"fn\">get</a>&lt;Q&gt;(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return a reference to the value stored for <code>key</code>, if it is present,\nelse <code>None</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_key_value\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#249-254\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.get_key_value\" class=\"fn\">get_key_value</a>&lt;Q&gt;(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return references to the key-value pair stored for <code>key</code>,\nif it is present, else <code>None</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#257-262\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.get_full\" class=\"fn\">get_full</a>&lt;Q&gt;(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index, key and value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_of\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#267-272\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.get_index_of\" class=\"fn\">get_index_of</a>&lt;Q&gt;(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index, if it exists in the map</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#275-280\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;Q&gt;(&amp;mut self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return a mutable reference to the element pointed at by <code>key</code>, if it exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#284-289\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.get_full_mut\" class=\"fn\">get_full_mut</a>&lt;Q&gt;(&amp;mut self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return a mutable reference to the element pointed at by <code>key</code>, if it exists.\nIt also returns the element’s index and its key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#301-306\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.shift_remove\" class=\"fn\">shift_remove</a>&lt;Q&gt;(&amp;mut self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the key-value pair equivalent to <code>key</code> and return\nits value.</p>\n<p>Like <code>Vec::remove</code>, the pair is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>key</code> is not in map.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_entry\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#317-322\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.shift_remove_entry\" class=\"fn\">shift_remove_entry</a>&lt;Q&gt;(&amp;mut self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove and return the key-value pair equivalent to <code>key</code>.</p>\n<p>Like <code>Vec::remove</code>, the pair is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>key</code> is not in map.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#334-339\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.shift_remove_full\" class=\"fn\">shift_remove_full</a>&lt;Q&gt;(&amp;mut self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, K, V)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the key-value pair equivalent to <code>key</code> and return it and\nthe index it had.</p>\n<p>Like <code>Vec::remove</code>, the pair is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>key</code> is not in map.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#346-348\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the last key-value pair</p>\n<p>This preserves the order of the remaining elements.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#357-362\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Scan through each key-value pair in the map and keep those where the\nclosure <code>keep</code> returns <code>true</code>.</p>\n<p>The elements are visited in order, and remaining elements keep their\norder.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details></div></details>",0,"opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#365-424\">source</a><a href=\"#impl-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#371-373\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.get_index\" class=\"fn\">get_index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get a key-value pair by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#380-382\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.get_index_mut\" class=\"fn\">get_index_mut</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get a key-value pair by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#387-389\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.first\" class=\"fn\">first</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get the first key-value pair</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#394-396\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.first_mut\" class=\"fn\">first_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get the first key-value pair, with mutable access to the value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#401-403\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get the last key-value pair</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#408-410\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.last_mut\" class=\"fn\">last_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get the last key-value pair, with mutable access to the value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#421-423\">source</a><h4 class=\"code-header\">pub fn <a href=\"opentelemetry/struct.OrderMap.html#tymethod.shift_remove_index\" class=\"fn\">shift_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the key-value pair by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <code>Vec::remove</code>, the pair is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details></div></details>",0,"opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3Cusize%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#532-539\">source</a><a href=\"#impl-IndexMut%3Cusize%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"docblock\"><p>Access <code>IndexMap</code> values at indexed positions.</p>\n<p>Mutable indexing allows changing / updating indexed values\nthat are already present.</p>\n<p>You can <strong>not</strong> insert new values with index syntax, use <code>.insert()</code>.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = IndexMap::new();\n<span class=\"kw\">for </span>word <span class=\"kw\">in </span><span class=\"string\">\"Lorem ipsum dolor sit amet\"</span>.split_whitespace() {\n    map.insert(word.to_lowercase(), word.to_string());\n}\n<span class=\"kw\">let </span>lorem = <span class=\"kw-2\">&amp;mut </span>map[<span class=\"number\">0</span>];\n<span class=\"macro\">assert_eq!</span>(lorem, <span class=\"string\">\"Lorem\"</span>);\nlorem.retain(char::is_lowercase);\n<span class=\"macro\">assert_eq!</span>(map[<span class=\"string\">\"lorem\"</span>], <span class=\"string\">\"orem\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = IndexMap::new();\nmap.insert(<span class=\"string\">\"foo\"</span>, <span class=\"number\">1</span>);\nmap[<span class=\"number\">10</span>] = <span class=\"number\">1</span>; <span class=\"comment\">// panics!</span></code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#536-538\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the value at the supplied <code>index</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.</p>\n</div></details></div></details>","IndexMut<usize>","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(%26K,+%26V)%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#585-597\">source</a><a href=\"#impl-Extend%3C(%26K,+%26V)%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a V</a>)&gt; for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    V: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#594-596\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a V</a>)&gt;&gt;(&amp;mut self, iterable: I)</h4></section></summary><div class=\"docblock\"><p>Extend the map with all key-value pairs in the iterable.</p>\n<p>See the first extend method for more details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#376\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#384\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(&'a K, &'a V)>","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#492-501\">source</a><a href=\"#impl-Index%3Cusize%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"docblock\"><p>Access <code>IndexMap</code> values at indexed positions.</p>\n<p>It panics if the index is out of bounds.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#498-500\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value at the supplied <code>index</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = V</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details></div></details>","Index<usize>","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CKeyValue%3E-for-OrderMap%3CKey,+Value,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#653-670\">source</a><a href=\"#impl-Extend%3CKeyValue%3E-for-OrderMap%3CKey,+Value,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"struct\" href=\"opentelemetry/struct.KeyValue.html\" title=\"struct opentelemetry::KeyValue\">KeyValue</a>&gt; for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;<a class=\"struct\" href=\"opentelemetry/struct.Key.html\" title=\"struct opentelemetry::Key\">Key</a>, <a class=\"enum\" href=\"opentelemetry/enum.Value.html\" title=\"enum opentelemetry::Value\">Value</a>, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#666-669\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"opentelemetry/struct.KeyValue.html\" title=\"struct opentelemetry::KeyValue\">KeyValue</a>&gt;&gt;(&amp;mut self, iterable: I)</h4></section></summary><div class=\"docblock\"><p>Extend the map with all key-value pairs in the iterable.</p>\n<p>This is equivalent to calling <a href=\"#method.insert\"><code>insert</code></a> for each of\nthem in order, which means that for keys that already existed\nin the map, their value is updated but it keeps the existing order.</p>\n<p>New keys are inserted in the order they appear in the sequence. If\nequivalents of a key occur more than once, the last corresponding value\nprevails.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#376\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#384\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<KeyValue>","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3COrderMap%3CK,+V2,+S2%3E%3E-for-OrderMap%3CK,+V1,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#609-619\">source</a><a href=\"#impl-PartialEq%3COrderMap%3CK,+V2,+S2%3E%3E-for-OrderMap%3CK,+V1,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V1, S1, V2, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V2, S2&gt;&gt; for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V1, S1&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    V1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;V2&gt;,\n    S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,\n    S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#616-618\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V2, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<OrderMap<K, V2, S2>>","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3C(K,+V)%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#541-554\">source</a><a href=\"#impl-FromIterator%3C(K,+V)%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>&gt; for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#551-553\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>&gt;&gt;(iterable: I) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>OrderMap</code> from the sequence of key-value pairs in the\niterable.</p>\n<p><code>from_iter</code> uses the same logic as <code>extend</code>. See\n<a href=\"#method.extend\"><code>extend</code></a> for more details.</p>\n</div></details></div></details>","FromIterator<(K, V)>","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(K,+V)%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#566-583\">source</a><a href=\"#impl-Extend%3C(K,+V)%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>&gt; for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#580-582\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a>&gt;&gt;(&amp;mut self, iterable: I)</h4></section></summary><div class=\"docblock\"><p>Extend the map with all key-value pairs in the iterable.</p>\n<p>This is equivalent to calling <a href=\"#method.insert\"><code>insert</code></a> for each of\nthem in order, which means that for keys that already existed\nin the map, their value is updated but it keeps the existing order.</p>\n<p>New keys are inserted in the order they appear in the sequence. If\nequivalents of a key occur more than once, the last corresponding value\nprevails.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#376\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#384\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(K, V)>","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CKeyValue%3E-for-OrderMap%3CKey,+Value,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#629-643\">source</a><a href=\"#impl-FromIterator%3CKeyValue%3E-for-OrderMap%3CKey,+Value,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"struct\" href=\"opentelemetry/struct.KeyValue.html\" title=\"struct opentelemetry::KeyValue\">KeyValue</a>&gt; for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;<a class=\"struct\" href=\"opentelemetry/struct.Key.html\" title=\"struct opentelemetry::Key\">Key</a>, <a class=\"enum\" href=\"opentelemetry/enum.Value.html\" title=\"enum opentelemetry::Value\">Value</a>, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#638-642\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"opentelemetry/struct.KeyValue.html\" title=\"struct opentelemetry::KeyValue\">KeyValue</a>&gt;&gt;(iterable: I) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>OrderMap</code> from the sequence of key-value pairs in the\niterable.</p>\n<p><code>from_iter</code> uses the same logic as <code>extend</code>. See\n<a href=\"#method.extend\"><code>extend</code></a> for more details.</p>\n</div></details></div></details>","FromIterator<KeyValue>","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#599-607\">source</a><a href=\"#impl-Default-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#604-606\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return an empty <code>OrderMap</code></p>\n</div></details></div></details>","Default","opentelemetry::trace::OrderMap"],["<section id=\"impl-Eq-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#621-627\">source</a><a href=\"#impl-Eq-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#14\">source</a><a href=\"#impl-Debug-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#14\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#442-448\">source</a><a href=\"#impl-IntoIterator-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, V)</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"indexmap/map/iter/struct.IntoIter.html\" title=\"struct indexmap::map::iter::IntoIter\">IntoIter</a>&lt;K, V&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#445-447\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3C%26Q%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#475-487\">source</a><a href=\"#impl-IndexMut%3C%26Q%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, Q, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>&gt; for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"docblock\"><p>Access <code>Ordermap</code> values corresponding to a key.</p>\n<p>Mutable indexing allows changing / updating values of key-value\npairs that are already present.</p>\n<p>You can <strong>not</strong> insert new pairs with index syntax, use <code>.insert()</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#484-486\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the value corresponding to the supplied <code>key</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>key</code> is not present in the map.</p>\n</div></details></div></details>","IndexMut<&Q>","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C%26Q%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#453-467\">source</a><a href=\"#impl-Index%3C%26Q%3E-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, Q, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>&gt; for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"docblock\"><p>Access <code>OrderMap</code> values corresponding to a key.</p>\n<p>Panics if the value is missing.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#464-466\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value corresponding to the supplied <code>key</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>key</code> is not present in the map.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = V</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details></div></details>","Index<&Q>","opentelemetry::trace::OrderMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-OrderMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#14\">source</a><a href=\"#impl-Clone-for-OrderMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/opentelemetry/order_map.rs.html#14\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"opentelemetry/struct.OrderMap.html\" title=\"struct opentelemetry::OrderMap\">OrderMap</a>&lt;K, V, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","opentelemetry::trace::OrderMap"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()