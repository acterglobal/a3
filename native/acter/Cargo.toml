[package]
name = "acter"
version = "0.1.0"
edition = "2021"
rust-version = "1.63"
description = "SDK of the acter app"
homepage = "https://acter.global"
repository = "https://github.com/acterglobal/a3"
license-file = "../../LICENSE.txt"

[features]
default = ["dart"]
testing = ["dep:matrix-sdk-base"]
cbindgen = []
dart = []
uniffi = ["dep:uniffi", "dep:thiserror"]


[build-dependencies]
ffi-gen = { git = "https://github.com/acterglobal/ffi-gen", branch = "proc-macro2-unpin" }
cbindgen = "0.24.3"
uniffi = { git = "https://github.com/mozilla/uniffi-rs/", features = [ "build" ] }

[dependencies]
anyhow = "1.0.51"
async-stream = "0.3.4"
chrono = "0.4"
derive_builder = "0.10.2"
eyeball-im = "0.4.1"
fern = { git = "https://github.com/acterglobal/fern", branch = "rotate", features = ["manual"] }
ffi-gen-macro = { git = "https://github.com/acterglobal/ffi-gen", branch = "proc-macro2-unpin" }
futures = "0.3.17"
futures-signals = "0.3.31"
infer = "0.15.0"
lazy_static = "1.4"
log = "0.4"
log-panics = "2.0.0"
mime = "0.3.16"
mime2ext = "0.1.52"
mime_guess = "2.0.4"
parse-env-filter = "0.1.0"
# enable support for system native TLS certificates
reqwest = { version = "*", features = ["rustls-tls-native-roots"]}
ruma = { workspace = true, features = ["html", "unstable-unspecified", "unstable-msc3488", "compat-unset-avatar", "unstable-msc3245-v1-compat"] }
ruma-common = { workspace = true, features = ["client"] }
ruma-events = { workspace = true }
sanitize-filename-reader-friendly = "2.2.1"
serde = { version = "1", features = ["derive"] }
serde_json = "1.0.104"
strum = { workspace = true }
tokio = "1"
tokio-stream = "0.1.14"
tokio-retry = "0.3.0"
tracing = { version = "0.1.40", default-features = false, features = ["log"] }
url = "2.2.2"
uuid = { version = "1.4.0", features = ["v4"] }

# for markdown support.
pulldown-cmark = { version = "0.9.1", default-features = false }

# for uniffi support
uniffi = { git = "https://github.com/mozilla/uniffi-rs/", features = ["cli"], optional = true }
thiserror = { version = "1.0.49", optional = true }

[dev-dependencies]
tempfile = "3.3.0"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }

[dependencies.acter-core]
path = "../core"
features = ["templates", "client"]

[dependencies.matrix-sdk]
workspace = true
features = [
    "anyhow",
    "automatic-room-key-forwarding",
    "bundled-sqlite",
    "markdown",
#   "qrcode",
    "rustls-tls",
]

[dependencies.matrix-sdk-base]
workspace = true
optional = true

#   ----   WASM
[target.'cfg(target_arch = "wasm32")'.dependencies]
tracing-wasm = "0.2.1"
wasm-bindgen-futures = "0.4.28"

#   ----   non-WASM
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
matrix-sdk-sqlite = { workspace = true }
matrix-sdk-ui = { workspace = true }

#   ----   ANDROID
[target.'cfg(target_os = "android")'.dependencies]
android_logger = "0.12"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
tracing-android = "0.2"
openssl = { version = "*", features = ["vendored"]}

#   ----   IOS/MACOS
[target.'cfg(target_os = "ios")'.dependencies]
oslog = { version = "0.2", features = ["logger"]}

[lib]
name = "acter"
crate-type = ["cdylib", "staticlib", "lib"]

[[bin]]
# This can be whatever name makes sense for your project, but the rest of this tutorial assumes uniffi-bindgen.
required-features = ["uniffi"]
name = "uniffi-bindgen"
path = "src/uniffi-bindgen.rs"