[package]
name = "acter"
version = "0.1.0"
edition = "2021"
rust-version = "1.81"
description = "SDK of the acter app"
homepage = "https://acter.global"
repository = "https://github.com/acterglobal/a3"
license-file = "../../LICENSE.txt"

[features]
default = ["dart", "uniffi"]
testing = ["acter-core/testing"]
cbindgen = []
tracing = ["dep:tracing-subscriber", "dep:tracing-appender", "dep:tracing-log"]
tracing-console = ["tracing", "dep:console-subscriber", "tokio/tracing"]
dart = []
uniffi = ["dep:uniffi", "dep:thiserror", "dep:matrix-sdk-ffi"]
proxyman = ["dep:reqwest", "dep:openssl"]

[build-dependencies]
ffi-gen = { workspace = true }
cbindgen = "0.28.0"
uniffi = { workspace = true, features = [ "build" ] }

[dependencies]
anyhow = "1.0.79"
async-stream = "0.3.5"
base64ct = { workspace = true, features = ["alloc"] }
chrono = "0.4"
derive-getters = { workspace = true }
derive_builder = { workspace = true }
eyeball-im = { workspace = true }
fern = { git = "https://github.com/acterglobal/fern", branch = "rotate", features = ["manual"] }
ffi-gen-macro = { git = "https://github.com/acterglobal/ffi-gen", branch = "main" }
# ffi-gen-macro = { path = "../../../ffi-gen/macro" }
futures = "0.3.30"
futures-signals = "0.3.33"
icalendar = { workspace = true }
infer = "0.19.0"
indexmap = { version = "2.2.5", features = ["serde"]}
lazy_static = "1.4"
log = "0.4"
log-panics = "2.1.0"
mime = "0.3.17"
mime2ext = "0.1.52"
mime_guess = "2.0.4"
parse-env-filter = "0.1.0"

sanitize-filename-reader-friendly = "2.2.1"
scc = { workspace = true }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
strum = { workspace = true }
tokio = {version = "1.37", features = ["rt-multi-thread"]  }
tokio-stream = "0.1.14"
tokio-retry = "0.3.0"
tracing = { version = "0.1.40", default-features = false, features = ["log"] }
url = { workspace = true }
urlencoding = { workspace = true }
uuid = { version = "1.6.1", features = ["v4"] }

# for uniffi support
uniffi = { workspace = true, features = ["cli"], optional = true }
matrix-sdk-ffi = { workspace = true, optional = true }
thiserror = { version = "2.0.11", optional = true }

# for proxyman support
# enable support for system native TLS certificates
reqwest = { optional = true, version = "*", default-features = false, features = ["rustls-tls-native-roots"] }

# for tracing support
tracing-subscriber = { version = "0.3.1", optional = true, default-features = false, features = ["fmt", "std", "env-filter"] }
tracing-appender = { version = "0.2", optional = true }
tracing-log = { version = "0.2", optional = true }
console-subscriber = { version = "0.4.1", optional = true }

# not used directly but needed to enable specific features from ruma
ruma = { workspace = true, features = ["api", "html", "rand", "unstable-msc2448", "unstable-msc2965", "unstable-msc3930", "unstable-msc3245-v1-compat"] }
ruma-common = { workspace = true, features = ["client"] }


[dev-dependencies]
tempfile = "3.9.0"

[dependencies.acter-core]
path = "../core"
features = ["templates", "client"]

[dependencies.matrix-sdk]
workspace = true
features = [
    "anyhow",
    "automatic-room-key-forwarding",
    "bundled-sqlite",
    "markdown",
#   "qrcode",
    "e2e-encryption",
]

[dependencies.matrix-sdk-base]
workspace = true

[dependencies.matrix-sdk-store-file-event-cache]
path = "../file-event-cache"

#   ----   WASM
[target.'cfg(target_arch = "wasm32")'.dependencies]
tracing-wasm = "0.2.1"
wasm-bindgen-futures = "0.4.40"

#   ----   non-WASM
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
matrix-sdk-sqlite = { workspace = true }
matrix-sdk-ui = { workspace = true }

#   ----   ANDROID
[target.'cfg(target_os = "android")'.dependencies]
android_logger = "0.15.0"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
tracing-android = "0.2"
openssl = { version = "*", optional = true, features = ["vendored"] }
url-preview = { git = "https://github.com/acterglobal/url-preview", branch = "android-support", default-features = false }

# ---- non Android
[target.'cfg(not(target_os = "android"))'.dependencies]
url-preview = { git = "https://github.com/acterglobal/url-preview", branch = "android-support", default-features = true }

#   ----   IOS/MACOS
[target.'cfg(target_os = "ios")'.dependencies]
oslog = { version = "0.2", features = ["logger"] }

[lib]
name = "acter"
crate-type = ["cdylib", "staticlib", "lib"]

[[bin]]
# This can be whatever name makes sense for your project, but the rest of this tutorial assumes uniffi-bindgen.
required-features = ["uniffi"]
name = "uniffi-bindgen"
path = "src/uniffi-bindgen.rs"



[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ruma_unstable_exhaustive_types)'] }
